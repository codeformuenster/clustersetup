# /etc/haproxy/haproxy.cfg
{{ ansible_managed | comment }}
#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log /dev/log local0
    log /dev/log local1 notice
    daemon

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 1
    timeout http-request    10s
    timeout queue           20s
    timeout connect         5s
    timeout client          36000s
    timeout server          36000s
    timeout http-keep-alive 10s
    timeout check           10s

#---------------------------------------------------------------------
# apiserver frontend which proxys to the masters
#---------------------------------------------------------------------
frontend apiserver
    bind *:{{ vip_kube_apiserver_port }}
    mode tcp
    option tcplog
    tcp-request content accept if { req.ssl_hello_type 1 }
    default_backend apiserver

#---------------------------------------------------------------------
# round robin balancing for apiserver
#---------------------------------------------------------------------
backend apiserver
    option httpchk GET /healthz
    http-check expect status 200
    mode tcp
    option ssl-hello-chk
    balance     roundrobin
        {% for hostname in groups['all'] -%}
        server {{ hostvars[hostname].inventory_hostname_short }} {{ hostvars[hostname].private_ip }}:{{ kube_apiserver_port }} check
        {% endfor %}

frontend ingress_http
    bind *:80
    mode tcp
    default_backend ingress_backend_http

backend ingress_backend_http
    mode tcp
    balance     roundrobin
        {% for hostname in groups['all'] -%}
        server {{ hostvars[hostname].inventory_hostname_short }} {{ hostvars[hostname].private_ip }}:{{ ingress_service_nodeport_http_port }} check send-proxy
        {% endfor %}

frontend ingress_https
    bind *:443
    mode tcp
    tcp-request content accept if { req.ssl_hello_type 1 }
    default_backend ingress_backend_https

backend ingress_backend_https
    mode tcp
    balance     roundrobin
        {% for hostname in groups['all'] -%}
        server {{ hostvars[hostname].inventory_hostname_short }} {{ hostvars[hostname].private_ip }}:{{ ingress_service_nodeport_https_port }} check send-proxy
        {% endfor %}
