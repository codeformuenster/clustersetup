---
- name: Install package dependencies for docker and kubeadm
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - software-properties-common
      - iptables
      - arptables
      - ebtables
      - gnupg2
      - openssl
      - open-iscsi
    state: present
    update_cache: yes

- name: Use legacy iptables for kubernetes
  alternatives:
    name: "{{ item }}"
    path: /usr/sbin/{{ item }}-legacy
  with_items:
    - "iptables"
    - "ip6tables"
    - "arptables"
    - "ebtables"

- name: Load the br_netfilter kernel module
  modprobe:
    name: br_netfilter
    state: present

- name: Configure iptables to route packets across the network bridge
  become: yes
  sysctl:
    name: "{{ entry }}"
    value: "1"
    sysctl_set: yes
  loop:
    - net.bridge.bridge-nf-call-ip6tables
    - net.bridge.bridge-nf-call-iptables
  loop_control:
    loop_var: entry

- name: Add GPG keys for docker, kubernetes and helm
  apt_key:
    url: "{{ item }}"
  with_items:
    - "https://download.docker.com/linux/debian/gpg"
    - "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
    - "https://baltocdn.com/helm/signing.asc"

- name: Add package repositories for docker, kubernetes and helm
  apt_repository:
    repo: "{{ item }}"
  with_items:
    - "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
    - "deb https://apt.kubernetes.io/ kubernetes-xenial main"
    - "deb https://baltocdn.com/helm/stable/debian/ all main"

- name: Refresh package repositories
  apt:
    update_cache: yes

- name: Add the apt version pinning file
  template:
    dest: /etc/apt/preferences.d/docker
    src: docker_apt_preferences.j2

- name: Install docker, kubelet, kubeadm, kubectl and helm
  apt:
    name:
    - "docker-ce={{ docker_version }}"
    - "docker-ce-cli={{ docker_cli_version }}"
    - "containerd.io={{ containerd_version }}"
    - "kubelet={{ kubelet_version }}"
    - "kubeadm={{ kubeadm_version }}"
    - "helm={{ helm_version }}"
    - kubectl

- name: Copy docker daemon.json to host
  copy:
    src: docker_daemon.json
    dest: /etc/docker/daemon.json
  register: docker_daemon_restart

- name: Create docker service drop-in directory
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory

- name: Create a docker service drop-in to enable shared mounts
  copy:
    content: |
      [Service]
      MountFlags=shared
    dest: /etc/systemd/system/docker.service.d/mountflags-shared.conf
  register: docker_daemon_restart

- name: Restart docker service if docker_daemon_restart changed
  service:
    name: docker
    state: restarted
    daemon_reload: yes
  when: docker_daemon_restart.changed

- name: Enable docker and kubelet systemd units
  systemd:
    state: started
    name: "{{ item }}"
    enabled: yes
  with_items:
    - "docker"
    - "kubelet"
